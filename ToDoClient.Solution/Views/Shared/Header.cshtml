@using ToDoClient.Solution.Models
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> userManager

@{ ApplicationUser user = await userManager.GetUserAsync(@User); }

<nav class="navbar sticky-top navbar-expand-lg justify-content-start">
  <h2>ToDoDex&emsp;</h2>
  <ul><li>
    <a class="header">&ensp;Home&ensp;</a>
    <ul>
      <li><a href='@Url.Action("Index", "Home")' class="link">Home</a></li>
    </ul>
  </li></ul>
  <ul><li>
    <a class="header">&ensp;ToDos&ensp;</a>
    <ul>
      <li><a href='@Url.Action("Add", "ToDos")' class="link">All ToDos</a></li>
      <li><a href='@Url.Action("Index", "ToDos")' class="link">Your ToDos</a>
        @if (user.ToDos != null){
          <ul>
          @{
            var result = user.ToDos.Split(":");
            int[] ints = Array.ConvertAll(result, r => Int32.TryParse(r, out var x) ? x : -1);
            for(int i=1; i<ints.Length; i++)
            {
              int id = (ints[i]);
              ToDo todo = ToDo.GetDetails(id);
              <li><a href='@Url.Action("Details", "ToDos", new { id = todo.ToDoId})' class="link">@todo.Name</a></li>
            }
          }
          </ul>
        }
      </li>
    </ul>
  </li></ul>
  <ul><li>
    <a class="header">&ensp;Account&ensp;</a>
    <ul>
      <li><a href='@Url.Action("Index", "Accounts")' class="link">Account</a></li>
      <li><a href='@Url.Action("Login", "Accounts")' class="link">Log In</a></li>
      <li><a href='@Url.Action("Register", "Accounts")' class="link">Register</a></li>
    </ul>
  </li></ul>
</nav>